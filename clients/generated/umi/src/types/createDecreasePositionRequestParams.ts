/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/kinobi-so/kinobi
 */

import { Option, OptionOrNullable } from '@metaplex-foundation/umi';
import {
  Serializer,
  bool,
  option,
  struct,
  u64,
} from '@metaplex-foundation/umi/serializers';
import { RequestType, RequestTypeArgs, getRequestTypeSerializer } from '.';

export type CreateDecreasePositionRequestParams = {
  collateralUsdDelta: bigint;
  sizeUsdDelta: bigint;
  requestType: RequestType;
  priceSlippage: Option<bigint>;
  jupiterMinimumOut: Option<bigint>;
  triggerPrice: Option<bigint>;
  triggerAboveThreshold: Option<boolean>;
  entirePosition: Option<boolean>;
  counter: bigint;
};

export type CreateDecreasePositionRequestParamsArgs = {
  collateralUsdDelta: number | bigint;
  sizeUsdDelta: number | bigint;
  requestType: RequestTypeArgs;
  priceSlippage: OptionOrNullable<number | bigint>;
  jupiterMinimumOut: OptionOrNullable<number | bigint>;
  triggerPrice: OptionOrNullable<number | bigint>;
  triggerAboveThreshold: OptionOrNullable<boolean>;
  entirePosition: OptionOrNullable<boolean>;
  counter: number | bigint;
};

export function getCreateDecreasePositionRequestParamsSerializer(): Serializer<
  CreateDecreasePositionRequestParamsArgs,
  CreateDecreasePositionRequestParams
> {
  return struct<CreateDecreasePositionRequestParams>(
    [
      ['collateralUsdDelta', u64()],
      ['sizeUsdDelta', u64()],
      ['requestType', getRequestTypeSerializer()],
      ['priceSlippage', option(u64())],
      ['jupiterMinimumOut', option(u64())],
      ['triggerPrice', option(u64())],
      ['triggerAboveThreshold', option(bool())],
      ['entirePosition', option(bool())],
      ['counter', u64()],
    ],
    { description: 'CreateDecreasePositionRequestParams' }
  ) as Serializer<
    CreateDecreasePositionRequestParamsArgs,
    CreateDecreasePositionRequestParams
  >;
}
