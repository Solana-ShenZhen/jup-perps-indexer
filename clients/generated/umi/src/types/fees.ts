/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/kinobi-so/kinobi
 */

import { Serializer, struct, u64 } from '@metaplex-foundation/umi/serializers';

export type Fees = {
  increasePositionBps: bigint;
  decreasePositionBps: bigint;
  addRemoveLiquidityBps: bigint;
  swapBps: bigint;
  taxBps: bigint;
  stableSwapBps: bigint;
  stableSwapTaxBps: bigint;
  liquidationRewardBps: bigint;
  protocolShareBps: bigint;
};

export type FeesArgs = {
  increasePositionBps: number | bigint;
  decreasePositionBps: number | bigint;
  addRemoveLiquidityBps: number | bigint;
  swapBps: number | bigint;
  taxBps: number | bigint;
  stableSwapBps: number | bigint;
  stableSwapTaxBps: number | bigint;
  liquidationRewardBps: number | bigint;
  protocolShareBps: number | bigint;
};

export function getFeesSerializer(): Serializer<FeesArgs, Fees> {
  return struct<Fees>(
    [
      ['increasePositionBps', u64()],
      ['decreasePositionBps', u64()],
      ['addRemoveLiquidityBps', u64()],
      ['swapBps', u64()],
      ['taxBps', u64()],
      ['stableSwapBps', u64()],
      ['stableSwapTaxBps', u64()],
      ['liquidationRewardBps', u64()],
      ['protocolShareBps', u64()],
    ],
    { description: 'Fees' }
  ) as Serializer<FeesArgs, Fees>;
}
