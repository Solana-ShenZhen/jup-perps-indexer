/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/kinobi-so/kinobi
 */

import { Option, OptionOrNullable } from '@metaplex-foundation/umi';
import {
  Serializer,
  option,
  struct,
  u64,
} from '@metaplex-foundation/umi/serializers';

export type AddLiquidity2Params = {
  tokenAmountIn: bigint;
  minLpAmountOut: bigint;
  tokenAmountPreSwap: Option<bigint>;
};

export type AddLiquidity2ParamsArgs = {
  tokenAmountIn: number | bigint;
  minLpAmountOut: number | bigint;
  tokenAmountPreSwap: OptionOrNullable<number | bigint>;
};

export function getAddLiquidity2ParamsSerializer(): Serializer<
  AddLiquidity2ParamsArgs,
  AddLiquidity2Params
> {
  return struct<AddLiquidity2Params>(
    [
      ['tokenAmountIn', u64()],
      ['minLpAmountOut', u64()],
      ['tokenAmountPreSwap', option(u64())],
    ],
    { description: 'AddLiquidity2Params' }
  ) as Serializer<AddLiquidity2ParamsArgs, AddLiquidity2Params>;
}
