/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/kinobi-so/kinobi
 */

import {
  Serializer,
  struct,
  u128,
  u64,
} from '@metaplex-foundation/umi/serializers';

export type Limit = {
  maxAumUsd: bigint;
  tokenWeightageBufferBps: bigint;
  maxPositionUsd: bigint;
};

export type LimitArgs = {
  maxAumUsd: number | bigint;
  tokenWeightageBufferBps: number | bigint;
  maxPositionUsd: number | bigint;
};

export function getLimitSerializer(): Serializer<LimitArgs, Limit> {
  return struct<Limit>(
    [
      ['maxAumUsd', u128()],
      ['tokenWeightageBufferBps', u128()],
      ['maxPositionUsd', u64()],
    ],
    { description: 'Limit' }
  ) as Serializer<LimitArgs, Limit>;
}
