/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/kinobi-so/kinobi
 */

import { PublicKey } from '@metaplex-foundation/umi';
import {
  Serializer,
  publicKey as publicKeySerializer,
  struct,
  u32,
  u64,
} from '@metaplex-foundation/umi/serializers';
import { OracleType, OracleTypeArgs, getOracleTypeSerializer } from '.';

export type OracleParams = {
  oracleAccount: PublicKey;
  oracleType: OracleType;
  maxPriceError: bigint;
  maxPriceAgeSec: number;
};

export type OracleParamsArgs = {
  oracleAccount: PublicKey;
  oracleType: OracleTypeArgs;
  maxPriceError: number | bigint;
  maxPriceAgeSec: number;
};

export function getOracleParamsSerializer(): Serializer<
  OracleParamsArgs,
  OracleParams
> {
  return struct<OracleParams>(
    [
      ['oracleAccount', publicKeySerializer()],
      ['oracleType', getOracleTypeSerializer()],
      ['maxPriceError', u64()],
      ['maxPriceAgeSec', u32()],
    ],
    { description: 'OracleParams' }
  ) as Serializer<OracleParamsArgs, OracleParams>;
}
