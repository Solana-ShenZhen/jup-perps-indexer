/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/kinobi-so/kinobi
 */

import { Serializer, struct, u64 } from '@metaplex-foundation/umi/serializers';

export type PricingParams = {
  tradeImpactFeeScalar: bigint;
  buffer: bigint;
  swapSpread: bigint;
  maxLeverage: bigint;
  maxGlobalLongSizes: bigint;
  maxGlobalShortSizes: bigint;
};

export type PricingParamsArgs = {
  tradeImpactFeeScalar: number | bigint;
  buffer: number | bigint;
  swapSpread: number | bigint;
  maxLeverage: number | bigint;
  maxGlobalLongSizes: number | bigint;
  maxGlobalShortSizes: number | bigint;
};

export function getPricingParamsSerializer(): Serializer<
  PricingParamsArgs,
  PricingParams
> {
  return struct<PricingParams>(
    [
      ['tradeImpactFeeScalar', u64()],
      ['buffer', u64()],
      ['swapSpread', u64()],
      ['maxLeverage', u64()],
      ['maxGlobalLongSizes', u64()],
      ['maxGlobalShortSizes', u64()],
    ],
    { description: 'PricingParams' }
  ) as Serializer<PricingParamsArgs, PricingParams>;
}
