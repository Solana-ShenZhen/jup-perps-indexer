/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/kinobi-so/kinobi
 */

import { Serializer, i64, struct } from '@metaplex-foundation/umi/serializers';
import {
  Fees,
  FeesArgs,
  Limit,
  LimitArgs,
  getFeesSerializer,
  getLimitSerializer,
} from '.';

export type SetPoolConfigParams = {
  fees: Fees;
  limit: Limit;
  maxRequestExecutionSec: bigint;
};

export type SetPoolConfigParamsArgs = {
  fees: FeesArgs;
  limit: LimitArgs;
  maxRequestExecutionSec: number | bigint;
};

export function getSetPoolConfigParamsSerializer(): Serializer<
  SetPoolConfigParamsArgs,
  SetPoolConfigParams
> {
  return struct<SetPoolConfigParams>(
    [
      ['fees', getFeesSerializer()],
      ['limit', getLimitSerializer()],
      ['maxRequestExecutionSec', i64()],
    ],
    { description: 'SetPoolConfigParams' }
  ) as Serializer<SetPoolConfigParamsArgs, SetPoolConfigParams>;
}
