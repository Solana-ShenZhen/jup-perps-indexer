/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/kinobi-so/kinobi
 */

import {
  Serializer,
  bool,
  struct,
  u64,
} from '@metaplex-foundation/umi/serializers';
import {
  OracleParams,
  OracleParamsArgs,
  Permissions,
  PermissionsArgs,
  PricingParams,
  PricingParamsArgs,
  getOracleParamsSerializer,
  getPermissionsSerializer,
  getPricingParamsSerializer,
} from '.';

export type AddCustodyParams = {
  isStable: boolean;
  oracle: OracleParams;
  pricing: PricingParams;
  permissions: Permissions;
  hourlyFundingDbps: bigint;
  targetRatioBps: bigint;
};

export type AddCustodyParamsArgs = {
  isStable: boolean;
  oracle: OracleParamsArgs;
  pricing: PricingParamsArgs;
  permissions: PermissionsArgs;
  hourlyFundingDbps: number | bigint;
  targetRatioBps: number | bigint;
};

export function getAddCustodyParamsSerializer(): Serializer<
  AddCustodyParamsArgs,
  AddCustodyParams
> {
  return struct<AddCustodyParams>(
    [
      ['isStable', bool()],
      ['oracle', getOracleParamsSerializer()],
      ['pricing', getPricingParamsSerializer()],
      ['permissions', getPermissionsSerializer()],
      ['hourlyFundingDbps', u64()],
      ['targetRatioBps', u64()],
    ],
    { description: 'AddCustodyParams' }
  ) as Serializer<AddCustodyParamsArgs, AddCustodyParams>;
}
